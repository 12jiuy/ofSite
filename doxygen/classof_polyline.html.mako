<%inherit file="base.mako" />
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    ${self.head()}
    <meta http-equiv="X-UA-Compatible" content="IE=9"/>
    <meta name="generator" content="Doxygen 1.8.3.1"/>
    <title>openFrameworks: Class Index</title>
    <link href="tabs.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="dynsections.js"></script>
    <link href="search/search.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="search/search.js"></script>
    <script type="text/javascript">
      $(document).ready(function() { searchBox.OnSelectItem(0); });
    </script>
    <link href="doxygen.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <div id="content">
      ${self.header()}
      <div id="body-wrap">
      		<div class="page-wide">
	            <div class="page-left-split">
           		    <h1 class="documentation">reference</h1> <ul class="docsadvanced"><li><a href="/documentation">basic</a></li> <li><a  class="active" href="/doxygen/annotated.html">advanced</a></li> </ul>
           		</div>
		        <div class="page-right-narrow">
			        <p>This documentation is automatically generated from the openFrameworks source code using doxygen and refers to the most recent release, version <strong>${bf.config.currentVersion}</strong>.</p>
		        </div>
       		</div>
      		<div class="page-wide">
      		    <div class="doxy-mainmenu">
<!-- Generated by Doxygen 1.8.3.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classof_polyline-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ofPolyline Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="of_polyline_8h_source.html">ofPolyline.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab8b6c33d5cb672d393aa107434d908c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ab8b6c33d5cb672d393aa107434d908c2">ofPolyline</a> ()</td></tr>
<tr class="separator:ab8b6c33d5cb672d393aa107434d908c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5867bbb1004e1957dc3804f328e59c25"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a5867bbb1004e1957dc3804f328e59c25">ofPolyline</a> (const vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp;<a class="el" href="of_bitmap_font_8cpp.html#aaebd14048566bff4d6920e945b7de664">verts</a>)</td></tr>
<tr class="separator:a5867bbb1004e1957dc3804f328e59c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8087ebabf60380f8736282d0e98118bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a8087ebabf60380f8736282d0e98118bc">clear</a> ()</td></tr>
<tr class="memdesc:a8087ebabf60380f8736282d0e98118bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">remove all the points  <a href="#a8087ebabf60380f8736282d0e98118bc">More...</a><br/></td></tr>
<tr class="separator:a8087ebabf60380f8736282d0e98118bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39230dd712cb2e9647ed0679eef06124"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a39230dd712cb2e9647ed0679eef06124">addVertex</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;p)</td></tr>
<tr class="memdesc:a39230dd712cb2e9647ed0679eef06124"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a vertex  <a href="#a39230dd712cb2e9647ed0679eef06124">More...</a><br/></td></tr>
<tr class="separator:a39230dd712cb2e9647ed0679eef06124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1616ebeee425ab5f8e03853d2a83c4c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a1616ebeee425ab5f8e03853d2a83c4c4">addVertex</a> (float x, float y, float z=0)</td></tr>
<tr class="separator:a1616ebeee425ab5f8e03853d2a83c4c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0825db11f31148731aecf1cbb33450de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a0825db11f31148731aecf1cbb33450de">addVertices</a> (const vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp;<a class="el" href="of_bitmap_font_8cpp.html#aaebd14048566bff4d6920e945b7de664">verts</a>)</td></tr>
<tr class="separator:a0825db11f31148731aecf1cbb33450de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54c18b6cbc55bf56ca34352b62a2e8f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a54c18b6cbc55bf56ca34352b62a2e8f2">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="classof_polyline.html#a0825db11f31148731aecf1cbb33450de">ofPolyline::addVertices</a> instead&quot;, void addVertexes(const vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp;<a class="el" href="of_bitmap_font_8cpp.html#aaebd14048566bff4d6920e945b7de664">verts</a>))</td></tr>
<tr class="separator:a54c18b6cbc55bf56ca34352b62a2e8f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f55273bea4c37d295d4d40d84b594bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a4f55273bea4c37d295d4d40d84b594bc">addVertices</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> *<a class="el" href="of_bitmap_font_8cpp.html#aaebd14048566bff4d6920e945b7de664">verts</a>, int numverts)</td></tr>
<tr class="separator:a4f55273bea4c37d295d4d40d84b594bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ec0e046fc413e4fb7a3e3e7e7e642b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a1ec0e046fc413e4fb7a3e3e7e7e642b8">OF_DEPRECATED_MSG</a> (&quot;Use <a class="el" href="classof_polyline.html#a0825db11f31148731aecf1cbb33450de">ofPolyline::addVertices</a> instead&quot;, void addVertexes(const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> *<a class="el" href="of_bitmap_font_8cpp.html#aaebd14048566bff4d6920e945b7de664">verts</a>, int numverts))</td></tr>
<tr class="separator:a1ec0e046fc413e4fb7a3e3e7e7e642b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7d5b95780ebf1aefb079f55bcf8d7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a4c7d5b95780ebf1aefb079f55bcf8d7a">lineTo</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;to)</td></tr>
<tr class="separator:a4c7d5b95780ebf1aefb079f55bcf8d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb12c5445d0f02e5dc7fbdeb9b91925e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#afb12c5445d0f02e5dc7fbdeb9b91925e">lineTo</a> (float x, float y, float z=0)</td></tr>
<tr class="separator:afb12c5445d0f02e5dc7fbdeb9b91925e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad87e96f81bcdb53e49a842825e3eba3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ad87e96f81bcdb53e49a842825e3eba3c">arc</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;center, float radiusX, float radiusY, float angleBegin, float angleEnd, bool clockwise, int curveResolution=20)</td></tr>
<tr class="separator:ad87e96f81bcdb53e49a842825e3eba3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad651321496a4cdc7011d44eaacf5159c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ad651321496a4cdc7011d44eaacf5159c">arc</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;center, float radiusX, float radiusY, float angleBegin, float angleEnd, int curveResolution=20)</td></tr>
<tr class="separator:ad651321496a4cdc7011d44eaacf5159c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4676b5961f01a5c7faab2da4aae0581c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a4676b5961f01a5c7faab2da4aae0581c">arc</a> (float x, float y, float radiusX, float radiusY, float angleBegin, float angleEnd, int curveResolution=20)</td></tr>
<tr class="separator:a4676b5961f01a5c7faab2da4aae0581c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4f4f25105a894d696e0e2b9acf7ff6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#adf4f4f25105a894d696e0e2b9acf7ff6">arc</a> (float x, float y, float z, float radiusX, float radiusY, float angleBegin, float angleEnd, int curveResolution=20)</td></tr>
<tr class="separator:adf4f4f25105a894d696e0e2b9acf7ff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3670ab8a82139711d8f264fc76889539"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a3670ab8a82139711d8f264fc76889539">arcNegative</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;center, float radiusX, float radiusY, float angleBegin, float angleEnd, int curveResolution=20)</td></tr>
<tr class="separator:a3670ab8a82139711d8f264fc76889539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab71bb4c424e087642fe6f2902d033719"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ab71bb4c424e087642fe6f2902d033719">arcNegative</a> (float x, float y, float radiusX, float radiusY, float angleBegin, float angleEnd, int curveResolution=20)</td></tr>
<tr class="separator:ab71bb4c424e087642fe6f2902d033719"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04c4e9f6dfea9d24a8dd6fbcada01a64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a04c4e9f6dfea9d24a8dd6fbcada01a64">arcNegative</a> (float x, float y, float z, float radiusX, float radiusY, float angleBegin, float angleEnd, int curveResolution=20)</td></tr>
<tr class="separator:a04c4e9f6dfea9d24a8dd6fbcada01a64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f749f4980bf8f1d5e6485c60c427881"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a8f749f4980bf8f1d5e6485c60c427881">curveTo</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;to, int curveResolution=16)</td></tr>
<tr class="separator:a8f749f4980bf8f1d5e6485c60c427881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfb0eb1be03677ef522bab2af60929c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#acfb0eb1be03677ef522bab2af60929c0">curveTo</a> (float x, float y, float z=0, int curveResolution=16)</td></tr>
<tr class="separator:acfb0eb1be03677ef522bab2af60929c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcb0cecaf02bd617b2dd0e1dad9f1d37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#adcb0cecaf02bd617b2dd0e1dad9f1d37">bezierTo</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;cp1, const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;cp2, const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;to, int curveResolution=16)</td></tr>
<tr class="memdesc:adcb0cecaf02bd617b2dd0e1dad9f1d37"><td class="mdescLeft">&#160;</td><td class="mdescRight">cubic bezier  <a href="#adcb0cecaf02bd617b2dd0e1dad9f1d37">More...</a><br/></td></tr>
<tr class="separator:adcb0cecaf02bd617b2dd0e1dad9f1d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ae7caff9acd3e4e019a0bb9745ef0cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a6ae7caff9acd3e4e019a0bb9745ef0cd">bezierTo</a> (float cx1, float cy1, float cx2, float cy2, float x, float y, int curveResolution=16)</td></tr>
<tr class="separator:a6ae7caff9acd3e4e019a0bb9745ef0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a357b5cf46f75c823159c9dc6679088f3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a357b5cf46f75c823159c9dc6679088f3">bezierTo</a> (float cx1, float cy1, float cz1, float cx2, float cy2, float cz2, float x, float y, float z, int curveResolution=16)</td></tr>
<tr class="separator:a357b5cf46f75c823159c9dc6679088f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a85cd8239ccdc4ccc7cb9c040aeda5e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a0a85cd8239ccdc4ccc7cb9c040aeda5e">quadBezierTo</a> (float cx1, float cy1, float cz1, float cx2, float cy2, float cz2, float x, float y, float z, int curveResolution=16)</td></tr>
<tr class="memdesc:a0a85cd8239ccdc4ccc7cb9c040aeda5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">quadratic bezier (lower resolution than cubic)  <a href="#a0a85cd8239ccdc4ccc7cb9c040aeda5e">More...</a><br/></td></tr>
<tr class="separator:a0a85cd8239ccdc4ccc7cb9c040aeda5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab47724b26a9dfbd6081b52f6574896d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ab47724b26a9dfbd6081b52f6574896d6">quadBezierTo</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;p1, const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;p2, const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;p3, int curveResolution=16)</td></tr>
<tr class="separator:ab47724b26a9dfbd6081b52f6574896d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae41accef12a150b3697adf712face9d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ae41accef12a150b3697adf712face9d2">quadBezierTo</a> (float cx1, float cy1, float cx2, float cy2, float x, float y, int curveResolution=16)</td></tr>
<tr class="separator:ae41accef12a150b3697adf712face9d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dd4d7bd3893646a2113d34031065449"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_polyline.html">ofPolyline</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a9dd4d7bd3893646a2113d34031065449">getSmoothed</a> (int smoothingSize, float smoothingShape=0)</td></tr>
<tr class="separator:a9dd4d7bd3893646a2113d34031065449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90c7d2040aff73aa29b68754f54ddfdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_polyline.html">ofPolyline</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a90c7d2040aff73aa29b68754f54ddfdb">getResampledBySpacing</a> (float spacing)</td></tr>
<tr class="separator:a90c7d2040aff73aa29b68754f54ddfdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eeaa3a902be5a10ca2267e29f668621"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_polyline.html">ofPolyline</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a6eeaa3a902be5a10ca2267e29f668621">getResampledByCount</a> (int count)</td></tr>
<tr class="separator:a6eeaa3a902be5a10ca2267e29f668621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99254796152ccddebb114dc743a11f7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classof_rectangle.html">ofRectangle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a99254796152ccddebb114dc743a11f7c">getBoundingBox</a> () const </td></tr>
<tr class="separator:a99254796152ccddebb114dc743a11f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9da6811ca1a47f4f303dfe7c4522e8cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a9da6811ca1a47f4f303dfe7c4522e8cb">getClosestPoint</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;target, unsigned int *nearestIndex=NULL)</td></tr>
<tr class="separator:a9da6811ca1a47f4f303dfe7c4522e8cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32408db0b6c76c79f1f1e4ba5c774a2e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a32408db0b6c76c79f1f1e4ba5c774a2e">inside</a> (float x, float y)</td></tr>
<tr class="separator:a32408db0b6c76c79f1f1e4ba5c774a2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4309b07a962a7603a809409f52168f8f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a4309b07a962a7603a809409f52168f8f">inside</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;p)</td></tr>
<tr class="separator:a4309b07a962a7603a809409f52168f8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadbd40bd1205fbe5106ed42e79243ee7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#aadbd40bd1205fbe5106ed42e79243ee7">simplify</a> (float tolerance=0.3)</td></tr>
<tr class="separator:aadbd40bd1205fbe5106ed42e79243ee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad88dd26a8298d54abb9dd3b1f55d00f8"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ad88dd26a8298d54abb9dd3b1f55d00f8">size</a> () const </td></tr>
<tr class="memdesc:ad88dd26a8298d54abb9dd3b1f55d00f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">points vector access  <a href="#ad88dd26a8298d54abb9dd3b1f55d00f8">More...</a><br/></td></tr>
<tr class="separator:ad88dd26a8298d54abb9dd3b1f55d00f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad4d76dc14ddaa777e5326466bc43ef"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a2ad4d76dc14ddaa777e5326466bc43ef">operator[]</a> (int index) const </td></tr>
<tr class="separator:a2ad4d76dc14ddaa777e5326466bc43ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9f50c6662aa5e344092cbc574ba751d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ae9f50c6662aa5e344092cbc574ba751d">operator[]</a> (int index)</td></tr>
<tr class="separator:ae9f50c6662aa5e344092cbc574ba751d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49e172bae1f49fce0b763fe05b33c53e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a49e172bae1f49fce0b763fe05b33c53e">resize</a> (size_t <a class="el" href="classof_polyline.html#ad88dd26a8298d54abb9dd3b1f55d00f8">size</a>)</td></tr>
<tr class="separator:a49e172bae1f49fce0b763fe05b33c53e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b7d22e0d3c5dfed22ebefcd7e79c35f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a2b7d22e0d3c5dfed22ebefcd7e79c35f">setClosed</a> (bool tf)</td></tr>
<tr class="memdesc:a2b7d22e0d3c5dfed22ebefcd7e79c35f"><td class="mdescLeft">&#160;</td><td class="mdescRight">closed  <a href="#a2b7d22e0d3c5dfed22ebefcd7e79c35f">More...</a><br/></td></tr>
<tr class="separator:a2b7d22e0d3c5dfed22ebefcd7e79c35f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a166b386bb2b1bd7225e05ff67528cd2a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a166b386bb2b1bd7225e05ff67528cd2a">isClosed</a> () const </td></tr>
<tr class="separator:a166b386bb2b1bd7225e05ff67528cd2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de14888c9c361bbe772789a69dd5e45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a1de14888c9c361bbe772789a69dd5e45">close</a> ()</td></tr>
<tr class="separator:a1de14888c9c361bbe772789a69dd5e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd08a523635b4a9203fb08a1447e9e38"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#abd08a523635b4a9203fb08a1447e9e38">hasChanged</a> ()</td></tr>
<tr class="separator:abd08a523635b4a9203fb08a1447e9e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a193202a0774fe5509f3b90827201fe8a"><td class="memItemLeft" align="right" valign="top">vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a193202a0774fe5509f3b90827201fe8a">getVertices</a> ()</td></tr>
<tr class="separator:a193202a0774fe5509f3b90827201fe8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbf01c8cdc85d3f1d88b2bc985498159"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#adbf01c8cdc85d3f1d88b2bc985498159">getPerimeter</a> () const </td></tr>
<tr class="separator:adbf01c8cdc85d3f1d88b2bc985498159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6b1b7fc338691bcc897329f2f5137a6"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#af6b1b7fc338691bcc897329f2f5137a6">getArea</a> () const </td></tr>
<tr class="separator:af6b1b7fc338691bcc897329f2f5137a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c7c97460efb5f91e752ec05dac7897"><td class="memItemLeft" align="right" valign="top"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a95c7c97460efb5f91e752ec05dac7897">getCentroid2D</a> () const </td></tr>
<tr class="separator:a95c7c97460efb5f91e752ec05dac7897"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6ea639f218d4ccf8ff616d68ec2bfa6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#af6ea639f218d4ccf8ff616d68ec2bfa6">draw</a> ()</td></tr>
<tr class="separator:af6ea639f218d4ccf8ff616d68ec2bfa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8e8213a2ad5b9ddc293d9708a5296009"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classof_polyline.html">ofPolyline</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a8e8213a2ad5b9ddc293d9708a5296009">fromRectangle</a> (const <a class="el" href="classof_rectangle.html">ofRectangle</a> &amp;rect)</td></tr>
<tr class="separator:a8e8213a2ad5b9ddc293d9708a5296009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4c8495d2bee752b9c4054ea5776cf80"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#ab4c8495d2bee752b9c4054ea5776cf80">inside</a> (float x, float y, const <a class="el" href="classof_polyline.html">ofPolyline</a> &amp;polyline)</td></tr>
<tr class="separator:ab4c8495d2bee752b9c4054ea5776cf80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7807d120d949d049aacc00d868d87a57"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classof_polyline.html#a7807d120d949d049aacc00d868d87a57">inside</a> (const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;p, const <a class="el" href="classof_polyline.html">ofPolyline</a> &amp;polyline)</td></tr>
<tr class="separator:a7807d120d949d049aacc00d868d87a57"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab8b6c33d5cb672d393aa107434d908c2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ofPolyline::ofPolyline </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5867bbb1004e1957dc3804f328e59c25"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ofPolyline::ofPolyline </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>verts</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a39230dd712cb2e9647ed0679eef06124"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::addVertex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a vertex </p>

</div>
</div>
<a class="anchor" id="a1616ebeee425ab5f8e03853d2a83c4c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::addVertex </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0825db11f31148731aecf1cbb33450de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::addVertices </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>verts</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4f55273bea4c37d295d4d40d84b594bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::addVertices </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> *&#160;</td>
          <td class="paramname"><em>verts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numverts</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad87e96f81bcdb53e49a842825e3eba3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arc </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clockwise</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad651321496a4cdc7011d44eaacf5159c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arc </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4676b5961f01a5c7faab2da4aae0581c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arc </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="adf4f4f25105a894d696e0e2b9acf7ff6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arc </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3670ab8a82139711d8f264fc76889539"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arcNegative </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab71bb4c424e087642fe6f2902d033719"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arcNegative </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a04c4e9f6dfea9d24a8dd6fbcada01a64"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::arcNegative </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radiusY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleBegin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angleEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="adcb0cecaf02bd617b2dd0e1dad9f1d37"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::bezierTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>cp1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>cp2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>to</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>cubic bezier </p>

</div>
</div>
<a class="anchor" id="a6ae7caff9acd3e4e019a0bb9745ef0cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::bezierTo </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a357b5cf46f75c823159c9dc6679088f3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::bezierTo </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cz1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cz2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8087ebabf60380f8736282d0e98118bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>remove all the points </p>

</div>
</div>
<a class="anchor" id="a1de14888c9c361bbe772789a69dd5e45"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8f749f4980bf8f1d5e6485c60c427881"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::curveTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>to</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acfb0eb1be03677ef522bab2af60929c0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::curveTo </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af6ea639f218d4ccf8ff616d68ec2bfa6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::draw </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8e8213a2ad5b9ddc293d9708a5296009"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_polyline.html">ofPolyline</a> ofPolyline::fromRectangle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classof_rectangle.html">ofRectangle</a> &amp;&#160;</td>
          <td class="paramname"><em>rect</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af6b1b7fc338691bcc897329f2f5137a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofPolyline::getArea </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a99254796152ccddebb114dc743a11f7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_rectangle.html">ofRectangle</a> ofPolyline::getBoundingBox </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a95c7c97460efb5f91e752ec05dac7897"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> ofPolyline::getCentroid2D </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9da6811ca1a47f4f303dfe7c4522e8cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> ofPolyline::getClosestPoint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>nearestIndex</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="adbf01c8cdc85d3f1d88b2bc985498159"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ofPolyline::getPerimeter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6eeaa3a902be5a10ca2267e29f668621"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_polyline.html">ofPolyline</a> ofPolyline::getResampledByCount </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a90c7d2040aff73aa29b68754f54ddfdb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_polyline.html">ofPolyline</a> ofPolyline::getResampledBySpacing </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>spacing</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9dd4d7bd3893646a2113d34031065449"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classof_polyline.html">ofPolyline</a> ofPolyline::getSmoothed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>smoothingSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>smoothingShape</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a193202a0774fe5509f3b90827201fe8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &gt; &amp; ofPolyline::getVertices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="abd08a523635b4a9203fb08a1447e9e38"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofPolyline::hasChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab4c8495d2bee752b9c4054ea5776cf80"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofPolyline::inside </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classof_polyline.html">ofPolyline</a> &amp;&#160;</td>
          <td class="paramname"><em>polyline</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7807d120d949d049aacc00d868d87a57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ofPolyline::inside </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classof_polyline.html">ofPolyline</a> &amp;&#160;</td>
          <td class="paramname"><em>polyline</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a32408db0b6c76c79f1f1e4ba5c774a2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofPolyline::inside </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4309b07a962a7603a809409f52168f8f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofPolyline::inside </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a166b386bb2b1bd7225e05ff67528cd2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ofPolyline::isClosed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4c7d5b95780ebf1aefb079f55bcf8d7a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::lineTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>to</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afb12c5445d0f02e5dc7fbdeb9b91925e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::lineTo </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a54c18b6cbc55bf56ca34352b62a2e8f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ofPolyline::OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="classof_polyline.html#a0825db11f31148731aecf1cbb33450de">ofPolyline::addVertices</a> instead&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>addVertexes</em>const vector&lt; ofPoint &gt; &amp;verts&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1ec0e046fc413e4fb7a3e3e7e7e642b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ofPolyline::OF_DEPRECATED_MSG </td>
          <td>(</td>
          <td class="paramtype">&quot;Use <a class="el" href="classof_polyline.html#a0825db11f31148731aecf1cbb33450de">ofPolyline::addVertices</a> instead&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void &#160;</td>
          <td class="paramname"><em>addVertexes</em>const ofPoint *verts, int numverts&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2ad4d76dc14ddaa777e5326466bc43ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp; ofPolyline::operator[] </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae9f50c6662aa5e344092cbc574ba751d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp; ofPolyline::operator[] </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0a85cd8239ccdc4ccc7cb9c040aeda5e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::quadBezierTo </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cz1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cz2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>quadratic bezier (lower resolution than cubic) </p>

</div>
</div>
<a class="anchor" id="ab47724b26a9dfbd6081b52f6574896d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::quadBezierTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="of_point_8h.html#a0e9c5f9596918593de99ee1bd275476f">ofPoint</a> &amp;&#160;</td>
          <td class="paramname"><em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae41accef12a150b3697adf712face9d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::quadBezierTo </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cx2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>cy2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>curveResolution</em> = <code>16</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a49e172bae1f49fce0b763fe05b33c53e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::resize </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2b7d22e0d3c5dfed22ebefcd7e79c35f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::setClosed </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>tf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>closed </p>

</div>
</div>
<a class="anchor" id="aadbd40bd1205fbe5106ed42e79243ee7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ofPolyline::simplify </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>tolerance</em> = <code>0.3</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad88dd26a8298d54abb9dd3b1f55d00f8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t ofPolyline::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>points vector access </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>graphics/<a class="el" href="of_polyline_8h_source.html">ofPolyline.h</a></li>
<li>graphics/<a class="el" href="of_polyline_8cpp.html">ofPolyline.cpp</a></li>
</ul>
</div><!-- contents -->

            </div>
      </div>
      <div id="footer">
        ${self.footer()}
      </div> <!-- End Footer -->
    </div> <!-- End Content -->
  </body>
</html>
<%def name="header()">
  <%include file="header.mako" args="active='documentation'" />
</%def>
