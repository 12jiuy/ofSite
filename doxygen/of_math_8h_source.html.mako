<%inherit file="base.mako" />
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    ${self.head()}
    <meta http-equiv="X-UA-Compatible" content="IE=9"/>
    <meta name="generator" content="Doxygen 1.8.3.1"/>
    <title>openFrameworks: Class Index</title>
    <link href="tabs.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="dynsections.js"></script>
    <link href="search/search.css" rel="stylesheet" type="text/css"/>
    <script type="text/javascript" src="search/search.js"></script>
    <script type="text/javascript">
      $(document).ready(function() { searchBox.OnSelectItem(0); });
    </script>
    <link href="doxygen.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <div id="content">
      ${self.header()}
      <div id="body-wrap">
      		<div class="page-wide">
	            <div class="page-left-split">
           		    <h1 class="documentation">reference</h1> <ul class="docsadvanced"><li><a href="/documentation">basic</a></li> <li><a  class="active" href="/doxygen/annotated.html">advanced</a></li> </ul>
           		</div>
		        <div class="page-right-narrow">
			        <p>This documentation is automatically generated from the openFrameworks source code using doxygen and refers to the most recent release, version <strong>${bf.config.currentVersion}</strong>.</p>
		        </div>
       		</div>
      		<div class="page-wide">
      		    <div class="doxy-mainmenu">
<!-- Generated by Doxygen 1.8.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_84d5b34cee6369a03c8d1f3b970ed216.html">openFrameworks</a></li><li class="navelem"><a class="el" href="dir_6b67c3a1fdba4d6b038dad8a0f05d92f.html">math</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ofMath.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="of_math_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// notes:</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// -----------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// for fast things look here: http://musicdsp.org/archive.php?classid=5#115</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// -----------------------------------------------------------</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// the random () calls are based on misconceptions described here:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// http://www.azillionmonkeys.com/qed/random.html</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">// (Bad advice from C.L.C. FAQ)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// we should correct this -- </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">// -----------------------------------------------------------</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_point_8h.html">ofPoint.h</a>&quot;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="of_constants_8h.html">ofConstants.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">int</span>         <a class="code" href="of_math_8cpp.html#a0e50654e98b730299945741b53853421" title="Calculates the next larger power of 2. ">ofNextPow2</a> ( <span class="keywordtype">int</span> a );</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">void</span>        <a class="code" href="of_math_8cpp.html#a0df526ceae8b4f80f169d6d3918540e5" title="Randomly seeds the random number generator. ">ofSeedRandom</a>();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">void</span>        <a class="code" href="of_math_8cpp.html#a0df526ceae8b4f80f169d6d3918540e5" title="Randomly seeds the random number generator. ">ofSeedRandom</a>(<span class="keywordtype">int</span> val);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#ae93bfe2a2080f0e2a03df835e72c7521" title="Returns a random floating point number between 0 and max. ">ofRandom</a>(<span class="keywordtype">float</span> max); </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#ae93bfe2a2080f0e2a03df835e72c7521" title="Returns a random floating point number between 0 and max. ">ofRandom</a>(<span class="keywordtype">float</span> val0, <span class="keywordtype">float</span> val1);       <span class="comment">// random (x - y)</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#aea7a1685224b49b4949899d4b283af51">ofRandomf</a>();                            <span class="comment">// random (-1 - 1)</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#ab701838d1aa2e4ad8f04bad401c21a0a" title="a random floating point number between 0 and 1. ">ofRandomuf</a>();                           <span class="comment">// random (0 - 1) </span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#aeda138c0500e2d10b0763e4c1ac1cc53" title="Given a value and a range, remap the value to be within 0 and 1. ">ofNormalize</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> min, <span class="keywordtype">float</span> max);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">//      //0 &lt; x &lt; 10</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">//      newx = ofMap(x, 0, 10, 21, 22) //newx = 21.5 a value between 21 and 22</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span><span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#aa36b88c917a1cebc82570eed1641120f" title="Given a value and an input range, remap the value to be within an output range. ">ofMap</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> inputMin, <span class="keywordtype">float</span> inputMax, <span class="keywordtype">float</span> outputMin, <span class="keywordtype">float</span> outputMax, <span class="keywordtype">bool</span> clamp = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a4b2fc21e53bfb8521923300b0d30afdb" title="Clamp a value between min and max. ">ofClamp</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> min, <span class="keywordtype">float</span> max);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a851eb0ea11c2bfe151665de8e3c66561" title="Linearly interpolate a value be within a range. ">ofLerp</a>(<span class="keywordtype">float</span> start, <span class="keywordtype">float</span> stop, <span class="keywordtype">float</span> amt);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#aa866e5d80a66299e18b89bf9f879b3f5" title="Calculates the distance between two points. ">ofDist</a>(<span class="keywordtype">float</span> x1, <span class="keywordtype">float</span> y1, <span class="keywordtype">float</span> x2, <span class="keywordtype">float</span> y2);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#acca6b68f9a67cbc302866c6b60f55899" title="Calculates the distance between two points, without taking the square root of the result...">ofDistSquared</a>(<span class="keywordtype">float</span> x1, <span class="keywordtype">float</span> y1, <span class="keywordtype">float</span> x2, <span class="keywordtype">float</span> y2);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keywordtype">int</span>         <a class="code" href="of_math_8cpp.html#a7f39494418fc89efee2378ec2ac989f8" title="Returns the sign of a number. ">ofSign</a>(<span class="keywordtype">float</span> n);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keywordtype">bool</span>        <a class="code" href="of_math_8cpp.html#aa078cdd83eb6d3dd355897e7f15a2f33" title="Returns true if the number t is the range of [min - max], false if it&#39;s not. ">ofInRange</a>(<span class="keywordtype">float</span> t, <span class="keywordtype">float</span> min, <span class="keywordtype">float</span> max);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a7d02e72641780bca037f6c63f7b6e508" title="Convert radians to degrees. ">ofRadToDeg</a>(<span class="keywordtype">float</span> radians);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a70a120b33471d10ce0e755ee43c32b25" title="Convert degrees to radiant. ">ofDegToRad</a>(<span class="keywordtype">float</span> degrees);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;``</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a3b9d058406f6fc2c2dc378057e789a60">ofLerpDegrees</a>(<span class="keywordtype">float</span> currentAngle, <span class="keywordtype">float</span> targetAngle, <span class="keywordtype">float</span> pct);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#ae1f8c65595c036c675cc390c2d90d166">ofLerpRadians</a>(<span class="keywordtype">float</span> currentAngle, <span class="keywordtype">float</span> targetAngle, <span class="keywordtype">float</span> pct);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a9187e3d0572b394eb8f341ec88b575f4">ofAngleDifferenceDegrees</a>(<span class="keywordtype">float</span> currentAngle, <span class="keywordtype">float</span> targetAngle);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a10ed9288cb91336033e7c3eeb159f604">ofAngleDifferenceRadians</a>(<span class="keywordtype">float</span> currentAngle, <span class="keywordtype">float</span> targetAngle);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a11cf9bc2b855744f58aa7f2f174eb657">ofWrap</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> from, <span class="keywordtype">float</span> to);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#af727c186564d950c4b65c6a4b4aa276e">ofWrapRadians</a>(<span class="keywordtype">float</span> angle, <span class="keywordtype">float</span> from = -<a class="code" href="of_constants_8h.html#a598a3330b3c21701223ee0ca14316eca">PI</a>, <span class="keywordtype">float</span> to=+<a class="code" href="of_constants_8h.html#a598a3330b3c21701223ee0ca14316eca">PI</a>);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#ae4ba80015162a1c7be1cc5eb39e205ef">ofWrapDegrees</a>(<span class="keywordtype">float</span> angle, <span class="keywordtype">float</span> from = -180, <span class="keywordtype">float</span> to=+180);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a9a9226ad2046591bf4aa5d2707ebba2f">ofRandomWidth</a>();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#ac0e9ce331e6b98373845f16e778548df">ofRandomHeight</a>();</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="comment">//returns noise in 0.0 to 1.0 range</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a94cb5392d5d0a5ed7908c5fd31ae97d2">ofNoise</a>(<span class="keywordtype">float</span> x);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a94cb5392d5d0a5ed7908c5fd31ae97d2">ofNoise</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a94cb5392d5d0a5ed7908c5fd31ae97d2">ofNoise</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a94cb5392d5d0a5ed7908c5fd31ae97d2">ofNoise</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> w);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="comment">//returns noise in -1.0 to 1.0 range</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a16196baebc57f663f27f9aff40c518e3">ofSignedNoise</a>(<span class="keywordtype">float</span> x);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a16196baebc57f663f27f9aff40c518e3">ofSignedNoise</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a16196baebc57f663f27f9aff40c518e3">ofSignedNoise</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordtype">float</span>       <a class="code" href="of_math_8cpp.html#a16196baebc57f663f27f9aff40c518e3">ofSignedNoise</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keywordtype">float</span> z, <span class="keywordtype">float</span> w);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keywordtype">bool</span>        <a class="code" href="of_math_8cpp.html#ac178b7fee13d26870dbbe2af54778785">ofInsidePoly</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y, <span class="keyword">const</span> vector&lt;ofPoint&gt; &amp; poly);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordtype">bool</span>        <a class="code" href="of_math_8cpp.html#ac178b7fee13d26870dbbe2af54778785">ofInsidePoly</a>(<span class="keyword">const</span> <a class="code" href="classof_vec3f.html">ofPoint</a> &amp; p, <span class="keyword">const</span> vector&lt;ofPoint&gt; &amp; poly);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordtype">bool</span>        <a class="code" href="of_math_8cpp.html#a6dc7132fb85eb90d7cf3194ad6c054cc">ofLineSegmentIntersection</a>(<a class="code" href="classof_vec3f.html">ofPoint</a> line1Start, <a class="code" href="classof_vec3f.html">ofPoint</a> line1End, <a class="code" href="classof_vec3f.html">ofPoint</a> line2Start, <a class="code" href="classof_vec3f.html">ofPoint</a> line2End, <a class="code" href="classof_vec3f.html">ofPoint</a> &amp; intersection);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<a class="code" href="classof_vec3f.html">ofPoint</a>     <a class="code" href="of_math_8cpp.html#ae41684be82f712ce9afe52366c57f9a0">ofBezierPoint</a>( <a class="code" href="classof_vec3f.html">ofPoint</a> a, <a class="code" href="classof_vec3f.html">ofPoint</a> b, <a class="code" href="classof_vec3f.html">ofPoint</a> c, <a class="code" href="classof_vec3f.html">ofPoint</a> <a class="code" href="of_polyline_8cpp.html#ae629cf86d3fc5a1280de48f9c0efeb13">d</a>, <span class="keywordtype">float</span> t);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<a class="code" href="classof_vec3f.html">ofPoint</a>     <a class="code" href="of_math_8cpp.html#abb059119ae6349bbbde274ac2b1b5e26">ofCurvePoint</a>( <a class="code" href="classof_vec3f.html">ofPoint</a> a, <a class="code" href="classof_vec3f.html">ofPoint</a> b, <a class="code" href="classof_vec3f.html">ofPoint</a> c, <a class="code" href="classof_vec3f.html">ofPoint</a> <a class="code" href="of_polyline_8cpp.html#ae629cf86d3fc5a1280de48f9c0efeb13">d</a>, <span class="keywordtype">float</span> t);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<a class="code" href="classof_vec3f.html">ofPoint</a>     <a class="code" href="of_math_8cpp.html#af7ef7086c0cb61b4883a15873dd2b87e">ofBezierTangent</a>( <a class="code" href="classof_vec3f.html">ofPoint</a> a, <a class="code" href="classof_vec3f.html">ofPoint</a> b, <a class="code" href="classof_vec3f.html">ofPoint</a> c, <a class="code" href="classof_vec3f.html">ofPoint</a> <a class="code" href="of_polyline_8cpp.html#ae629cf86d3fc5a1280de48f9c0efeb13">d</a>, <span class="keywordtype">float</span> t);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<a class="code" href="classof_vec3f.html">ofPoint</a>     <a class="code" href="of_math_8cpp.html#ae12c7ac240f0bd70fb212c16a9022f0d">ofCurveTangent</a>( <a class="code" href="classof_vec3f.html">ofPoint</a> a, <a class="code" href="classof_vec3f.html">ofPoint</a> b, <a class="code" href="classof_vec3f.html">ofPoint</a> c, <a class="code" href="classof_vec3f.html">ofPoint</a> <a class="code" href="of_polyline_8cpp.html#ae629cf86d3fc5a1280de48f9c0efeb13">d</a>, <span class="keywordtype">float</span> t);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;Type        <a class="code" href="of_math_8h.html#a03ae1b6363bc5768851000d35538066e">ofInterpolateCosine</a>(Type y1, Type y2, <span class="keywordtype">float</span> pct);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;Type        <a class="code" href="of_math_8h.html#ae4fa59b0c4c66e53f4e017923121ea0d">ofInterpolateCubic</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;Type        <a class="code" href="of_math_8h.html#a91742a5ecd1dd798be415bbc493c22bf">ofInterpolateCatmullRom</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;Type        <a class="code" href="of_math_8h.html#a5983155f864e82d3f5dfb57d95ff8f27">ofInterpolateHermite</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;Type        <a class="code" href="of_math_8h.html#a5983155f864e82d3f5dfb57d95ff8f27">ofInterpolateHermite</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct, <span class="keywordtype">float</span> tension, <span class="keywordtype">float</span> bias);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">// from http://paulbourke.net/miscellaneous/interpolation/</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">//--------------------------------------------------</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="code" href="of_math_8h.html#a03ae1b6363bc5768851000d35538066e">  239</a></span>&#160;Type <a class="code" href="of_math_8h.html#a03ae1b6363bc5768851000d35538066e">ofInterpolateCosine</a>(Type y1, Type y2, <span class="keywordtype">float</span> pct){</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordtype">float</span> pct2;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    pct2 = (1-cos(pct*<a class="code" href="of_constants_8h.html#a598a3330b3c21701223ee0ca14316eca">PI</a>))/2;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">return</span>(y1*(1-pct2)+y2*pct2);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">// from http://paulbourke.net/miscellaneous/interpolation/</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">//--------------------------------------------------</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="code" href="of_math_8h.html#ae4fa59b0c4c66e53f4e017923121ea0d">  249</a></span>&#160;Type <a class="code" href="of_math_8h.html#ae4fa59b0c4c66e53f4e017923121ea0d">ofInterpolateCubic</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct){</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    Type a0,a1,a2,a3;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordtype">float</span> pct2;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    pct2 = pct*pct;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    a0 = y3 - y2 - y0 + y1;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    a1 = y0 - y1 - a0;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    a2 = y2 - y0;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    a3 = y1;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span>(a0*pct*pct2+a1*pct2+a2*pct+a3);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">// from http://paulbourke.net/miscellaneous/interpolation/</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">//--------------------------------------------------</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="code" href="of_math_8h.html#a91742a5ecd1dd798be415bbc493c22bf">  265</a></span>&#160;Type <a class="code" href="of_math_8h.html#a91742a5ecd1dd798be415bbc493c22bf">ofInterpolateCatmullRom</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct){</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    Type a0,a1,a2,a3;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordtype">float</span> pct2 = pct*pct;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    a0 = -0.5*y0 + 1.5*y1 - 1.5*y2 + 0.5*y3;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    a1 = y0 - 2.5*y1 + 2*y2 - 0.5*y3;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    a2 = -0.5*y0 + 0.5*y2;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    a3 = y1;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">return</span>(a0*pct*pct2 + a1*pct2 + a2*pct +a3);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">// from http://musicdsp.org/showArchiveComment.php?ArchiveID=93</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">// laurent de soras</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">//--------------------------------------------------</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="code" href="of_math_8h.html#a5983155f864e82d3f5dfb57d95ff8f27">  279</a></span>&#160;<span class="keyword">inline</span> Type <a class="code" href="of_math_8h.html#a5983155f864e82d3f5dfb57d95ff8f27">ofInterpolateHermite</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct){</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">const</span> Type <a class="code" href="of_matrix4x4_8cpp.html#aafc737ea9ef91f59cf9acd287fb8d085">c</a> = (y2 - y0) * 0.5f;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">const</span> Type v = y1 - y2;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">const</span> Type w = c + v;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> Type <a class="code" href="of_matrix4x4_8cpp.html#a8d3c3518d793541417a4845125da1ae1">a</a> = w + v + (y3 - y1) * 0.5f;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">const</span> Type b_neg = w + a;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">return</span> ((((a * pct) - b_neg) * pct + c) * pct + y1);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">// from http://paulbourke.net/miscellaneous/interpolation/</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">//--------------------------------------------------</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00292"></a><span class="lineno"><a class="code" href="of_math_8h.html#a2fff1be1275f2e15198628c0cd15bb4f">  292</a></span>&#160;Type <a class="code" href="of_math_8h.html#a5983155f864e82d3f5dfb57d95ff8f27">ofInterpolateHermite</a>(Type y0, Type y1, Type y2, Type y3, <span class="keywordtype">float</span> pct, <span class="keywordtype">float</span> tension, <span class="keywordtype">float</span> bias){</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordtype">float</span> pct2,pct3;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    Type m0,m1;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    Type a0,a1,a2,a3;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    pct2 = pct * pct;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    pct3 = pct2 * pct;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    m0  = (y1-y0)*(1+bias)*(1-tension)/2;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    m0 += (y2-y1)*(1-bias)*(1-tension)/2;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    m1  = (y2-y1)*(1+bias)*(1-tension)/2;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    m1 += (y3-y2)*(1-bias)*(1-tension)/2;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    a0 =  Type(2*pct3 - 3*pct2 + 1);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    a1 =  Type(pct3 - 2*pct2 + pct);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    a2 =  Type(pct3 -   pct2);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    a3 =  Type(-2*pct3 + 3*pct2);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;   <span class="keywordflow">return</span>(a0*y1+a1*m0+a2*m1+a3*y2);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->

            </div>
      </div>
      <div id="footer">
        ${self.footer()}
      </div> <!-- End Footer -->
    </div> <!-- End Content -->
  </body>
</html>
<%def name="header()">
  <%include file="header.mako" args="active='documentation'" />
</%def>
